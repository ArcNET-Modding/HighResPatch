//mouse over fixes:
WRITE_BYTE 0x1741E9 0xB6
WRITE_BYTE 0x17437E 0x21
WRITE_BYTE 0x174B41 0x5E
WRITE_BYTE 0x175FBA 0xE5

SET searchlength = 0
SET replacelength = 30
SPRINT replacepattern ~123456789012345678901234567890~
SPRINT replacebytes ~A1 64 34 68 00 53 55 56 8B 74 24 14 33 D2 81 EE 7D 00 00 00 8B 5C 24 10 81 EB 70 00 00 00~
LAUNCH_PATCH_MACRO Q_Pattern_Maker
WRITE_EVALUATED_ASCII 0x175CA3 "%replacepattern%" (%replacelength%)

WRITE_LONG 0x175CFB 0x90909090
WRITE_LONG 0x175D60 0x90909090
WRITE_LONG 0x175DD1 0x90909090
WRITE_LONG 0x175E3F 0x90909090
WRITE_LONG 0x175EA4 0x90909090

//mouse over offset:
WRITE_LONG 0x175CBD WidthBonus //x
WRITE_LONG 0x175CB3 (HeightBonus + 41) //y

//item art offset fixes:
WRITE_BYTE 0x17561F 0xB9
WRITE_BYTE 0x17566A 0x6E
WRITE_BYTE 0x17567A 0x30

SET searchlength = 0
SET replacelength = 224
SPRINT replacepattern ~12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234~
SPRINT replacebytes ~81 E9 78 00 00 00 C1 E8 1F 89 0E 8B 4E 28 03 D0 2B CA C1 E1 05 81 E9 25 01 00 00 EB 2E F7 FB B8 67 66 66 66 C1 E2 05 2B CA F7 EF C1 FA 02 8B C2 81 E9 78 00 00 00 C1 E8 1F 89 0E 8B 4E 28 03 D0 2B CA C1 E1 05 81 E9 05 01 00 00 01 4E 04 8B 06 8B 5E 04 83 C0 02 83 C3 02 89 06 89 5E 04 E8 3F A3 F8 FF 8B 54 24 10 52 E8 E5 A8 F8 FF 8D 44 24 14 50 6A 00 6A 00 6A 00 6A 00 E8 23 EC F8 FF 8B 4E 04 8B 16 8B 44 24 28 51 52 50 E8 42 AA F8 FF 8B 4E 04 8B 16 51 52 E8 C6 A9 F8 FF E8 41 A3 F8 FF 6A 00 E8 EA 0D 00 00 8B 46 14 8B 4E 10 8B 56 0C 6A 00 6A 00 6A 00 50 8B 46 08 51 52 50 E8 9F B4 F7 FF 83 C4 4C 6A 01 50 E8 24 60 EA FF 56 E8 E5 4B 01 00 83 C4 0C B8 01 00 00 00 5F 5E 5B C3~
LAUNCH_PATCH_MACRO Q_Pattern_Maker
WRITE_EVALUATED_ASCII 0x17568E "%replacepattern%" (%replacelength%)

//item art offset (main inventory):
WRITE_LONG 0x175654 (WidthBonus + 368) //x
WRITE_LONG 0x175663 (0 - (HeightBonus + 49)) //y

//item art offset (barter):
WRITE_LONG 0x175690 (WidthBonus + 8) //x
WRITE_LONG 0x1756A5 (HeightBonus + 209) //y

//item art offset (loot):
WRITE_LONG 0x1756C0 (WidthBonus + 8) //x
WRITE_LONG 0x1756D5 (HeightBonus + 177) //y

//gamble/use/drop buttons mouse areas:
WRITE_LONG 0x172F39 (WidthBonus + 703) //x all buttons
WRITE_LONG 0x172F6A (HeightBonus + 385) //y drop
WRITE_LONG 0x172F8A (HeightBonus + 331) //y use
WRITE_LONG 0x172FC5 (HeightBonus + 277) //y gamble
